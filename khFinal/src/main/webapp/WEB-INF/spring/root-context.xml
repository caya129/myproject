<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 빈 자동 스캔, servlet-context.xml에서
	    Controller를 자동 스캔 설정해서 아래 설정에서는
	    Controller 자동 스캔 제외 -->
	<context:component-scan base-package="kr.gazeua">
		<context:exclude-filter type="annotation" 
		expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> 
	
	<!-- JDBC 기반 트랜잭션 관리자 설정 -->
	<bean id="transactionManager"
	  class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	  p:dataSource-ref="dataSource"/>
	
	<!-- 어노테이션 사용시 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	  
	<!-- db 설정 파일 -->
	<context:property-placeholder location="classpath:config/jdbc.properties"/>
	
	<!-- 커넥션 풀을 이용한 DataSource 설정 -->
	<bean id="dataSource" 
	      class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 최대 커넥션 개수 -->
		<property name="maxActive" value="50"/>
		<!-- 접속이 없을 경우 최대 유지 커넥션 개수 -->
		<property name="maxIdle" value="30"/>
		<!-- 접속이 없을 경우 최소 유지 커넥션 개수 -->
		<property name="minIdle" value="20"/>
		<!-- 최대 대기기간(초) : 초과시 연결 실패 오류 발생 -->
		<property name="maxWait" value="5"/>
	</bean>
	
	<!-- mybatis 기본 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- alias 가능하도록 하는 것. 규칙은 class명 맨 앞글자 소문자로 한다. String도 string으로  -->
		<property name="typeAliasesPackage" value="kr.gazeua.member.domain,
												   kr.gazeua.record.domain,
												   kr.gazeua.review.domain,
												   kr.gazeua.order.domain"/>
	</bean>
	
	<!-- DAO 클래스를 개발자가 직접 만들지 않고 설정만 해주면 autoscan하도록 한다. 대신에
		인터페이스를 이용해서 어떤 메서드를 만들지 지정해준다. 
		-->
	<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.gazeua.member.dao,
											kr.gazeua.record.dao,
											kr.gazeua.review.dao,
											kr.gazeua.order.dao"/>
	</bean>	
	
</beans>
